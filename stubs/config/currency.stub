{{{
  exports({ to: app.configPath('currency.ts') })
}}}
import env from '#start/env'
import { defineConfig, exchanges } from '@mixxtor/currencyx-adonisjs'

const currencyConfig = defineConfig({
  /*
  |--------------------------------------------------------------------------
  | Default Exchange
  |--------------------------------------------------------------------------
  |
  | The default currency provider to use. You can switch between exchanges
  | at runtime using the currency.use() method.
  |
  */
  default: env.get('CURRENCY_EXCHANGE_PROVIDER', 'database') as typeof currencyConfig,

  /*
  |--------------------------------------------------------------------------
  | Exchange Configurations
  |--------------------------------------------------------------------------
  |
  | Configure each currency provider. You can enable/disable exchanges by
  | commenting out their configuration.
  |
  */
  exchanges: {
    /*
    |--------------------------------------------------------------------------
    | Database Exchange
    |--------------------------------------------------------------------------
    |
    | Uses your local database to store and retrieve exchange rates.
    | Requires a Currency model and proper database setup.
    |
    */
    database: exchanges.database({
      model: () => import('#models/currency'),
      base: 'USD',    // Base currency for all exchange rates
      columns: {
        code: 'code',             // Currency code column (USD, EUR, etc.)
        rate: 'exchange_rate',    // Exchange rate column (relative to base currency)
        updated_at: 'updated_at', // Updated at column
      },
      cache: {
        service: () => import('@adonisjs/cache/services/main'),
        ttl: '1h',          // Number of time to live in milliseconds, or a human-readable string
        prefix: 'currency', // Cache key prefix
      },
    }),

    /*
    |--------------------------------------------------------------------------
    | Google Finance Exchange
    |--------------------------------------------------------------------------
    |
    | Free exchange using Google Finance API. No API key required.
    | Good for development and testing.
    |
    */
    google: exchanges.google({
      base: env.get('CURRENCY_BASE', 'USD'),
      timeout: 5000,
    }),

    /*
    |--------------------------------------------------------------------------
    | Fixer.io Exchange
    |--------------------------------------------------------------------------
    |
    | Requires API key from fixer.io. Provides accurate and up-to-date
    | exchange rates. Uncomment and configure if you have an API key.
    |
    */
    fixer: exchanges.fixer({
      accessKey: env.get('FIXER_API_KEY', 'your_api_key'),
      base: env.get('CURRENCY_BASE', 'EUR'),
      timeout: 10000,
    }),
  },
})

export default currencyConfig

/*
|--------------------------------------------------------------------------
| Type Augmentation
|--------------------------------------------------------------------------
|
| Augment the container types to include the currency service.
| This provides better IntelliSense and type safety.
|
*/
declare module '@mixxtor/currencyx-adonisjs/types' {
  interface CurrencyExchanges extends InferExchanges<typeof currencyConfig> {}
}
